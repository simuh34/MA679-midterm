knitr::opts_chunk$set(echo = TRUE)
train<-fread("train_sample.csv")
library(data.table)
train<-fread("train_sample.csv")
View(train)
pacman::p_load(
"data.table",
"magrittr",
"tidyr",
"formattable",
"missForest",
"MASS",
"randomForest"
)
# random forest
set.seed(327)
bag.boston <-  randomForest( change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr,
mtry = 9,importance =TRUE)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(
"data.table",
"magrittr",
"tidyr",
"formattable",
"missForest",
"MASS",
"randomForest"
)
summary(train)
train<-fread("train_sample.csv")
summary(train)
# unique(train$gender)
# unique(train$relevant_experience)
# unique(train$enrolled_university)
# unique(train$experience_years)
# unique(train$city_id)
# unique(train$company_size)
df <- data.frame(train)
df %<>% separate(city_id, c("city_x", "city_id_n"), sep = "_" )
df %<>% select(-"city_x")
train<-fread("train_sample.csv")
df <- data.frame(train)
df %<>% separate(city_id, c("city_x", "city_id_n"), sep = "_" )
df %<>% select(-"city_x")
df <- data.frame(train)
df %<>% separate(city_id, c("city_x", "city_id_n"), sep = "_" )
View(df)
df %<>% select(-"city_x")
?select
df <- df[, -3]
# df$experience_years[which(df$experience_years == ">20")] <- 21
# df$experience_years[which(df$experience_years == "<1")] <- 0
# df$last_new_job[which(df$last_new_job == "never")] <- 0
# df$last_new_job[which(df$last_new_job == ">4")] <- 5
df$gender[which(df$gender == "")] <- "unknown"
df$major_discipline[which(df$major_discipline == "")] <- "STEM"
df$enrolled_university[which(df$enrolled_university == "")] <- "no_enrollment"
df$education_level[which(df$education_level == "")] <- "Graduate"
df$company_size[which(df$company_size == "")] <- "unknown"
df$company_type[which(df$company_type == "")] <- "Pvt Ltd"
# df$experience_years <- as.numeric(df$experience_years)
df$city_id_n <- as.numeric(df$city_id_n)
names_fac <- c(5:13)
df[,names_fac] <- lapply(df[,names_fac], as.factor)
set.seed(327)
index <- sample(nrow(df), nrow(df)/2, replace = FALSE )
#training samples
df_tr <- df[index, -1]
#testing samples
df_ts <- df[-index, -1]
#summary(df_tr)
#summary(df_ts)
# logistic regression
glm_fit_logi <- glm(change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, family =  binomial )
summary (glm_fit_logi)
# prediction
glm_probs <- predict (glm_fit_logi, type = "response" , newdata = df_ts)
glm_pred <- rep("0", nrow(df_ts))
glm_pred[glm_probs >.5] = "1"
table(glm_pred, df_ts$change_job)
c_rate_logi <- (table(glm_pred, df_ts$change_job)[1] + table(glm_pred, df_ts$change_job)[4]) / nrow(df_ts)
print(paste0("The logistic regression here correctly predict ", percent(c_rate_logi), " of people's choices."))
# random forest
set.seed(327)
bag.boston <-  randomForest( change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr,
mtry = 9,importance =TRUE)
# random forest
set.seed(327)
bag.boston <-  randomForest( change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr,
importance =TRUE)
bag.boston
View(df)
# random forest
set.seed(327)
bag.boston <-  randomForest( change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3,
importance =TRUE)
rf_fit <-  randomForest( change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3,
importance =TRUE)
rf_pre <- predict(rf_fit, newdata = df_ts)
table (rf_pre, df_ts$change_job)
plot(rf_fit)
rf_pre <- predict(rf_fit, newdata = df_ts, type = "class")
table(re_pre, df_ts$change_job)
table(rf_pre, df_ts$change_job)
# LDA
lda_fit <- lda(change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr)
lda_pred <- predict (lda_fit, newdata = df_ts)
table (lda_pred$class, df_ts$change_job)
c_rate_lda <- (table(lda_pred$class, df_ts$change_job)[1] + table(lda_pred$class, df_ts$change_job)[4]) / nrow(df_ts)
print(paste0("The lda model here correctly predict ", percent(c_rate_lda), " of people's choices."))
# random forest
set.seed(327)
rf_fit <-  randomForest( change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3,
importance =TRUE)
plot(rf_fit)
rf_pre <- predict(rf_fit, newdata = df_ts, type = "prob")
rf_pre <- predict(rf_fit, newdata = df_ts)
confusionMatrix(rf_pre, df_ts$change_job)
pacman::p_load(
"data.table",
"magrittr",
"tidyr",
"formattable",
"missForest",
"MASS",
"randomForest",
"caret"
)
confusionMatrix(rf_pre, df_ts$change_job)
rf_pre <- predict(rf_fit, newdata = df_ts)
rf_pre <- predict(rf_fit, newdata = df_ts, type = "prob")
rf_pre <- predict(rf_fit, newdata = df_ts, type = "response")
confusionMatrix(rf_pre, df_ts$change_job)
table(rf_pre, df_ts$change_job)
summary(rf_fit)
print(rf_fit)
rf_fit
# random forest
set.seed(327)
rf_fit <-  randomForest( change_job ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3)
rf_fit
# rf_pre <- predict(rf_fit, newdata = df_ts, type = "response")
rf_fit <-  randomForest( as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3)
rf_fit
# logistic regression
glm_fit_logi <- glm(as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, family =  binomial )
# logistic regression
glm_fit_logi <- glm(as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, family =  binomial )
summary (glm_fit_logi)
# prediction
glm_probs <- predict (glm_fit_logi, type = "response" , newdata = df_ts)
glm_pred <- rep("0", nrow(df_ts))
glm_pred[glm_probs >.5] = "1"
table(glm_pred, df_ts$change_job)
c_rate_logi <- (table(glm_pred, df_ts$change_job)[1] + table(glm_pred, df_ts$change_job)[4]) / nrow(df_ts)
print(paste0("The logistic regression here correctly predict ", percent(c_rate_logi), " of people's choices."))
# LDA
lda_fit <- lda(as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr)
lda_pred <- predict (lda_fit, newdata = df_ts)
table (lda_pred$class, df_ts$change_job)
c_rate_lda <- (table(lda_pred$class, df_ts$change_job)[1] + table(lda_pred$class, df_ts$change_job)[4]) / nrow(df_ts)
print(paste0("The lda model here correctly predict ", percent(c_rate_lda), " of people's choices."))
# random forest
set.seed(327)
rf_fit <-  randomForest( as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3)
rf_fit
print("The random forest correctly predict 77.18% of people's choices.")
rf_fit
rf_fit$confusion
(rf_fit$confusion[1] + rf_fit$confusion[2]) / 4000
rf_fit
c_rate_rf <- (rf_fit$confusion[1] + rf_fit$confusion[2]) / 4000
print(paste0("The Random Forest correctly predict ", percent(c_rate_rf), " of people's choices."))
test <- fread("test_sample.csv")
View(test)
print(rf_fit)
c_rate_rf <- (rf_fit$confusion[1] + rf_fit$confusion[2]) / 4000
print(paste0("The Random Forest correctly predict ", percent(c_rate_rf), " of people's choices."))
train<-fread("test_sample.csv")
test <- fread("test_sample.csv")
View(test)
table(df[, 7])
test <- data.frame(test)
test %<>% separate(city_id, c("city_x", "city_id_n"), sep = "_" )
test <- test[, -3]
test$gender[which(test$gender == "")] <- "unknown"
test$major_discipline[which(test$major_discipline == "")] <- "STEM"
test$enrolled_university[which(test$enrolled_university == "")] <- "no_enrollment"
test$education_level[which(test$education_level == "")] <- "Graduate"
test$company_size[which(test$company_size == "")] <- "unknown"
test$company_type[which(test$company_type == "")] <- "Pvt Ltd"
test$city_id_n <- as.numeric(test$city_id_n)
names_fac <- c(5:13)
test[,names_fac] <- lapply(df[,names_fac], as.factor)
test <- data.frame(test)
test %<>% separate(city_id, c("city_x", "city_id_n"), sep = "_" )
test <- fread("test_sample.csv")
test <- data.frame(test)
test %<>% separate(city_id, c("city_x", "city_id_n"), sep = "_" )
test <- test[, -3]
test$gender[which(test$gender == "")] <- "unknown"
test$major_discipline[which(test$major_discipline == "")] <- "STEM"
test$enrolled_university[which(test$enrolled_university == "")] <- "no_enrollment"
test$education_level[which(test$education_level == "")] <- "Graduate"
test$company_size[which(test$company_size == "")] <- "unknown"
test$company_type[which(test$company_type == "")] <- "Pvt Ltd"
test$city_id_n <- as.numeric(test$city_id_n)
names_fac <- c(5:13)
test[,names_fac] <- lapply(test[,names_fac], as.factor)
sum(is.na(test))
# random forest
set.seed(327)
rf_fit <-  randomForest( as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3)
print(rf_fit)
c_rate_rf <- (rf_fit$confusion[1] + rf_fit$confusion[2]) / 4000
print(paste0("The Random Forest correctly predict ", percent(c_rate_rf), " of people's choices."))
# random forest
set.seed(327)
rf_fit <-  randomForest( as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 4)
print(rf_fit)
c_rate_rf <- (rf_fit$confusion[1] + rf_fit$confusion[2]) / 4000
print(paste0("The Random Forest correctly predict ", percent(c_rate_rf), " of people's choices."))
# random forest
set.seed(327)
rf_fit <-  randomForest( as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3)
print(rf_fit)
c_rate_rf <- (rf_fit$confusion[1] + rf_fit$confusion[2]) / 4000
print(paste0("The Random Forest correctly predict ", percent(c_rate_rf), " of people's choices."))
# random forest
set.seed(327)
rf_fit <-  randomForest( as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df, mtry = 3)
print(rf_fit)
c_rate_rf <- (rf_fit$confusion[1] + rf_fit$confusion[2]) / 4000
print(paste0("The Random Forest correctly predict ", percent(c_rate_rf), " of people's choices."))
print(rf_fit)
c_rate_rf <- (rf_fit$confusion[1] + rf_fit$confusion[2]) / 8000
print(paste0("The Random Forest correctly predict ", percent(c_rate_rf), " of people's choices."))
pacman::p_load(
"data.table",
"magrittr",
"tidyr",
"formattable",
"missForest",
"MASS",
"randomForest",
"caret",
"ROCR"
)
install.packages("ROCR")
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(
"data.table",
"magrittr",
"tidyr",
"formattable",
"missForest",
"MASS",
"randomForest",
"caret",
"ROCR"
)
# random forest
set.seed(327)
rf_fit <-  randomForest( as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3)
print(rf_fit)
c_rate_rf <- (rf_fit$confusion[1] + rf_fit$confusion[2]) / 4000
print(paste0("The Random Forest correctly predict ", percent(c_rate_rf), " of people's choices."))
rf_pre <- predict(rf_fit, newdata = df_ts)
rf_pre <- predict(rf_fit, newdata = df_ts)
?roc
roc(df_tr$change_job, rf_fit, col = "#377eb8",plot = TRUE, percent = TRUE,print.auc = TRUE)
install.packages("pROC")
pacman::p_load(
"data.table",
"magrittr",
"tidyr",
"formattable",
"missForest",
"MASS",
"randomForest",
"caret",
"pROC"
)
roc(df_tr$change_job, rf_fit, col = "#377eb8",plot = TRUE, percent = TRUE,print.auc = TRUE)
roc <- roc(as.ordered(df_ts$change_job), as.ordered(rf_pre))
plot(roc, print.auc = T, auc.polygon = T, grid = c(0.1, 0.2), grid.col = c("green", "red"), max.auc.polygon = T, auc.polygon.col = "skyblue", print.thres = T)
roc <- multiclass.roc(as.ordered(df_ts$change_job), as.ordered(rf_pre))
roc
roc <- roc(as.ordered(df_ts$change_job), as.ordered(rf_pre))
plot(roc)
plot(roc, grid.col = c("green", "red"))
roc
plot(roc)
submission <- fread("submission.csv")
submission <- fread("submission.csv")
View(submission)
ts_pred <- predict(rf_fit, test, type = "class")
write.csv(submission, file = "D:\\R project\\679\\midterm\\midterm-exam-simuh34")
write.csv(submission, file = "D:\\R project\\679\\midterm\\midterm-exam-simuh34\\submission.csv")
submission$change_job <- ts_pred
View(submission)
View(submission)
write.csv(submission, file = "D:\\R project\\679\\midterm\\midterm-exam-simuh34\\submission.csv")
plot(roc, print.auc = T, auc.polygon = T, grid = c(0.1, 0.2), max.auc.polygon = T, auc.polygon = T, auc.polygon.col = "skyblue", print.thres = T)
roc <- roc(as.ordered(df_ts$change_job), as.ordered(rf_pre))
roc
plot(roc, print.auc = T, auc.polygon = T, grid = c(0.1, 0.2), max.auc.polygon = T, auc.polygon = T, auc.polygon.col = "skyblue", print.thres = T)
plot(roc, print.auc = T, auc.polygon = T, grid = c(0.1, 0.2), max.auc.polygon = T, auc.polygon.col = "skyblue", print.thres = T)
roc
write.csv(submission, file = "submission.csv")
roc <- roc(as.ordered(df_ts$change_job), as.ordered(rf_pre))
roc
plot(roc, print.auc = T, auc.polygon = T, grid = c(0.1, 0.2), max.auc.polygon = T, auc.polygon.col = "skyblue", print.thres = T)
View(train)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(
"data.table",
"magrittr",
"tidyr",
"formattable",
"MASS",
"randomForest",
"caret",
"pROC"
)
roc <- roc(as.ordered(df_ts$change_job), as.ordered(rf_pre))
roc
plot(roc, print.auc = T, auc.polygon = T, grid = c(0.1, 0.2), max.auc.polygon = T, auc.polygon.col = "skyblue", print.thres = T)
```{r, echo = FALSE}
roc <- roc(as.ordered(df_ts$change_job), as.ordered(rf_pre))
roc
plot(roc, print.auc = T, auc.polygon = T, grid = c(0.1, 0.2), max.auc.polygon = T, auc.polygon.col = "skyblue", print.thres = T)
roc <- roc(as.ordered(df_ts$change_job), as.ordered(rf_pre))
roc
plot(roc, print.auc = T, auc.polygon = T, grid = c(0.1, 0.2), max.auc.polygon = T, auc.polygon.col = "skyblue", print.thres = T)
summary(rf_fit)
# random forest
set.seed(327)
rf_fit <-  randomForest( as.factor(change_job) ~ city_id_n + city_dev_index + gender + relevant_experience + enrolled_university + education_level + major_discipline + company_size + company_type, data = df_tr, mtry = 3)
View(submission)
train<-fread("train_sample.csv")
train<-fread("train_sample.csv")
View(train)
